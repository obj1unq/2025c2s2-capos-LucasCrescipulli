import capos.*

describe "Capos"{

    test "1.1: Rolando con dos artefactos"{
        rolando.tamañoMochila(2)
        rolando.encontrarArtefacto(espadaDelDestino)
        rolando.encontrarArtefacto(libroDeHechizos)
        rolando.encontrarArtefacto(collarDivino)
        assert.equals(rolando.mochila(), #{espadaDelDestino, libroDeHechizos})
    }

    test "1.2: Rolando almacena en el Castillo de Piedra"{
        rolando.encontrarArtefacto(espadaDelDestino)
        rolando.encontrarArtefacto(libroDeHechizos)
        rolando.llegarACasa()
        assert.equals(castilloDePiedra.almacenamiento(), #{espadaDelDestino, libroDeHechizos})
        rolando.encontrarArtefacto(collarDivino)
        rolando.llegarACasa()
        assert.equals(castilloDePiedra.almacenamiento(), #{espadaDelDestino, libroDeHechizos, collarDivino})
        assert.equals(#{}, rolando.mochila())
    }

    test "1.3: Saber qué artefactos tiene Rolando"{
        castilloDePiedra.almacenar(#{collarDivino, espadaDelDestino})
        rolando.encontrarArtefacto(armaduraDeAceroValyrio)
        assert.equals(#{collarDivino, espadaDelDestino, armaduraDeAceroValyrio}, rolando.posesiones())
        assert.notThat(rolando.posesiones().contains(libroDeHechizos))
    }

    test "1.4: Historial de artefactos encontrados"{
        rolando.encontrarArtefacto(espadaDelDestino)
        rolando.encontrarArtefacto(libroDeHechizos)
        rolando.encontrarArtefacto(collarDivino)
        rolando.llegarACasa()
        rolando.encontrarArtefacto(armaduraDeAceroValyrio)
        rolando.encontrarArtefacto(collarDivino)
        assert.equals([espadaDelDestino, libroDeHechizos, collarDivino,
                        armaduraDeAceroValyrio, collarDivino], rolando.historialDeEncuentros())
    }

    test "2.1: Comportamiento de los artefactos"{
        rolando.poderBase(5)
        rolando.tamañoMochila(3)
        rolando.mochila().addAll(#{espadaDelDestino, armaduraDeAceroValyrio, collarDivino})
        rolando.pelearBatalla()
        assert.equals(6, rolando.poderBase())
        assert.equals(3, espadaDelDestino.poderQueAportaA(rolando))
        assert.equals(6, armaduraDeAceroValyrio.poderQueAportaA(rolando))
        assert.equals(3, collarDivino.poderQueAportaA(rolando))
        rolando.pelearBatalla()
        assert.equals(7, rolando.poderBase())
        assert.equals(3.5, espadaDelDestino.poderQueAportaA(rolando))
        assert.equals(6, armaduraDeAceroValyrio.poderQueAportaA(rolando))
        assert.equals(5, collarDivino.poderQueAportaA(rolando))
        rolando.pelearBatalla()
        assert.equals(8, rolando.poderBase())
        assert.equals(4, espadaDelDestino.poderQueAportaA(rolando))
        assert.equals(6, armaduraDeAceroValyrio.poderQueAportaA(rolando))
        assert.equals(6, collarDivino.poderQueAportaA(rolando))
    }

    test "Ejemplo de poder de pelea"{
        rolando.poderBase(5)
        rolando.tamañoMochila(3)
        rolando.mochila().addAll(#{espadaDelDestino, armaduraDeAceroValyrio, collarDivino})
        assert.equals(19, rolando.poderDePelea())
    }

    test "2.2: Libro de hechizos"{
        rolando.poderBase(5)
        rolando.encontrarArtefacto(libroDeHechizos)
        libroDeHechizos.listaDeHechizos([bendicion, invisibilidad, invocacion])
        castilloDePiedra.almacenar(#{espadaDelDestino, armaduraDeAceroValyrio, collarDivino})
        assert.equals(4, libroDeHechizos.poderQueAportaA(rolando))
        rolando.pelearBatalla()
        assert.equals(6, libroDeHechizos.poderQueAportaA(rolando))
        rolando.pelearBatalla()
        assert.equals(7, libroDeHechizos.poderQueAportaA(rolando))
        rolando.pelearBatalla()
        assert.equals(0, libroDeHechizos.poderQueAportaA(rolando))
    }
}